# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.kernelPackages = pkgs.linuxPackages_latest;

  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "thunderbolt"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  boot.kernelParams = [
    "quiet"
    "loglevel=3"
    "rd.systemd.show_status=false"
    "rd.udev.log_level=3"
    "udev.log_priority=3"
  ];
  boot.consoleLogLevel = 0;
  boot.initrd.verbose = false;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/aa6989aa-6f70-4712-b8aa-fbfba346b478";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-08590cd3-3382-4dab-9105-563597bafc67".device =
    "/dev/disk/by-uuid/08590cd3-3382-4dab-9105-563597bafc67";
  boot.initrd.luks.devices."luks-258f7838-387b-4f19-b0ed-ebe2678fdbe4".device =
    "/dev/disk/by-uuid/258f7838-387b-4f19-b0ed-ebe2678fdbe4";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/FD54-FACE";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/01a8e08f-7c6b-424c-b503-548a71093d3e"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Enable bluetooth
  hardware.bluetooth = {
    enable = true; # enables support for Bluetooth
    powerOnBoot = true; # powers up the default Bluetooth controller on boot
    settings.General.Experimental = true;
  };
  services.blueman.enable = true;

  hardware.graphics = {
    enable = true;
    enable32Bit = true; # Critical for Steam games
    extraPackages = with pkgs; [
      rocmPackages.clr.icd # OpenCL support
    ];
    extraPackages32 = with pkgs.driversi686Linux; [
    ];
  };

}
